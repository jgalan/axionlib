<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--This file is an example of REST simulation functionality. We process the output root file 
from restG4, converting its TRestG4Event to TRestSignalEvent. Observables and processes's 
internal values are saved.
-->

<TRestManager name="RESTManagerSim" title="Template manager to process a simulation generated by restG4." verboseLevel="info">

  <TRestRun name="Run metadata" title="REST Metadata run info (template)" verboseLevel="info">
    <parameter name="experiment" value="babyIAXO"/>
    <parameter name="runType" value="simulation"/>
    <parameter name="runNumber" value="100"/> //it will find next run number from database when we use "auto"
    <parameter name="runTag" value="Template"/>
    <parameter name="runDescription" value="We launch just 100 events to check everything is ok."/>
    <parameter name="user" value="${USER}"/>
    <parameter name="verboseLevel" value="2"/>
	<parameter name="outputFile" value="./Run_[fExperimentName].root" />

	<TRestAxionModel name="axionModel" file="metadata.rml" verboseLevel="info" />

	<addTask command="axionModel->PrintMetadata()" value="ON"/>

  </TRestRun>


  <TRestProcessRunner name="EventProcess" verboseLevel="info">
    <parameter name="eventsToProcess" value="100000" />
    <parameter name="threadNumber" value="2"/>

    <parameter name="inputAnalysis" value="on"/>
    <parameter name="inputEvent" value="off"/>
    <parameter name="outputEvent" value="on"/>

	<addProcess type="TRestAxionGeneratorProcess" name="axionGen" value="ON" verboseLevel="info" >
		<parameter name="energyStep" value="1.e-3" />
		<parameter name="energyRange" value="(0,15)" />
	</addProcess>

	<addProcess type="TRestAxionAnalysisProcess" name="axGen" value="ON" verboseLevel="info" >
		<observable name="energy" value="ON" />
	</addProcess>
	   
	<!--	file="processes.rml"/> -->

  </TRestProcessRunner>
  
  <!--<addTask type="processEvents" value="ON" />-->
  <addTask command="EventProcess->RunProcess()" value="ON"/>

  <globals>
    <parameter name="outputLevel" value="internalvar" /> %options are : nooutput(0), observable(1), internalvar(2), fulloutput(3)
    <parameter name="verboseLevel" value="essential" /> %options are : silent(0), essential(1), info(2), debug(3), extreme(4)
    <parameter name="inputFile" value=""/>
    <searchPath value="$ENV{REST_INPUTDATA}/definitions/"/>
  </globals>

</TRestManager>


<!--paramater here is accessible to all the classes -->
